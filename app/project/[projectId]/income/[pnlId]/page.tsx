"use client";

import { useState } from "react";

type IncomeItem = {
id: number;
name: string;
unit: string;
quantity: number;
price: number;
type: string;
period: string;
};

export default function IncomePage() {
const [incomeList, setIncomeList] = useState<IncomeItem[]>([]);
const [aiPrompt, setAiPrompt] = useState("");

const handleAddIncome = () => {
const newItem: IncomeItem = {
id: Date.now(),
name: "–ù–æ–≤–∏–π –¥–æ—Ö—ñ–¥",
unit: "–∫–≥",
quantity: 100,
price: 50,
type: "–ü—Ä–æ–¥—É–∫—Ü—ñ—è",
period: "2025-06",
};
setIncomeList([...incomeList, newItem]);
};

const handleAIQuery = async () => {
// TODO: –ó–∞–ø–∏—Ç –¥–æ API OpenAI
const mockAIResponse: IncomeItem[] = [
{
id: Date.now(),
name: "–ü–æ–ª—É–Ω–∏—Ü—è",
unit: "–∫–≥",
quantity: 5000,
price: 70,
type: "–ü—Ä–æ–¥—É–∫—Ü—ñ—è",
period: "2025-06",
},
];
setIncomeList([...incomeList, ...mockAIResponse]);
};

return (
<main className="max-w-5xl mx-auto px-4 py-10 space-y-8">
<h1 className="text-3xl font-bold">–î–æ—Ö–æ–¥–∏ –ø—Ä–æ—î–∫—Ç—É: (–Ω–∞–∑–≤–∞ –ø—Ä–æ–µ–∫—Ç—É)</h1>

{/* üîπ –¢–∞–±–ª–∏—Ü—è –ø–µ—Ä—ñ–æ–¥—ñ–≤ */}
<section>
<h2 className="text-xl font-semibold mb-2">–î–æ—Ö–æ–¥–∏ –∑–∞ –ø–µ—Ä—ñ–æ–¥</h2>
<table className="w-full table-auto border">
<thead>
<tr className="bg-gray-100">
<th className="border px-4 py-2">–ü–µ—Ä—ñ–æ–¥</th>
<th className="border px-4 py-2">–°—É–º–∞ –¥–æ—Ö–æ–¥—É</th>
<th className="border px-4 py-2">–î—ñ—ó</th>
</tr>
</thead>
<tbody>
{Array.from(
new Set(incomeList.map((item) => item.period))
).map((period) => (
<tr key={period}>
<td className="border px-4 py-2">{period}</td>
<td className="border px-4 py-2">
{incomeList
.filter((i) => i.period === period)
.reduce((sum, i) => sum + i.price * i.quantity, 0)}{" "}
–≥—Ä–Ω
</td>
</tr>
))}
</tbody>
</table>
</section>

{/* üîπ –¢–∞–±–ª–∏—Ü—è –¥–æ—Ö–æ–¥—ñ–≤ */}
<section>
<h2 className="text-xl font-semibold mb-2">–î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ—Ö–æ–¥—ñ–≤</h2>
<table className="w-full table-auto border text-sm">
<thead className="bg-gray-100">
<tr>
<th className="border px-2 py-1">–ù–∞–∑–≤–∞</th>
<th className="border px-2 py-1">–û–¥. –≤–∏–º—ñ—Ä—É</th>
<th className="border px-2 py-1">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
<th className="border px-2 py-1">–¶—ñ–Ω–∞</th>
<th className="border px-2 py-1">–°—É–º–∞</th>
<th className="border px-2 py-1">–¢–∏–ø</th>
</tr>
</thead>
<tbody>
{incomeList.map((item) => (
<tr key={item.id}>
<td className="border px-2 py-1">{item.name}</td>
<td className="border px-2 py-1">{item.unit}</td>
<td className="border px-2 py-1">{item.quantity}</td>
<td className="border px-2 py-1">{item.price}</td>
<td className="border px-2 py-1">
{item.quantity * item.price}
</td>
<td className="border px-2 py-1">{item.type}</td>
<td className="border px-2 py-1">{item.period}</td>
</tr>
))}
</tbody>
</table>
</section>

{/* üîπ –ö–Ω–æ–ø–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤—Ä—É—á–Ω—É */}
<button
onClick={handleAddIncome}
className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
>
‚ûï –î–æ–¥–∞—Ç–∏ –¥–æ—Ö—ñ–¥ –≤—Ä—É—á–Ω—É
</button>

{/* üîπ AI-–ø–æ–º—ñ—á–Ω–∏–∫ */}
<section>
<h2 className="text-xl font-semibold mb-2 mt-6">AI-–ø–æ–º—ñ—á–Ω–∏–∫</h2>
<textarea
value={aiPrompt}
onChange={(e) => setAiPrompt(e.target.value)}
placeholder="–û–ø–∏—à–∏ –¥–∂–µ—Ä–µ–ª–æ –¥–æ—Ö–æ–¥—É..."
className="w-full border p-2 rounded mb-2"
rows={3}
/>
<button
onClick={handleAIQuery}
className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
>
ü§ñ –ó–∞–ø–∏—Ç–∞—Ç–∏ —É AI
</button>
</section>
</main>
);
}